Test-Case: output
Description: Test Unsigned16 built-in subtype of int.
Labels: int:Unsigned16

public function main() {
    int:Unsigned16 a1 = 0;
    int:Unsigned16 a2 = 15431;
    int:Unsigned16 a3 = 65535;

    testUnsigned16Int(a1); // @output 0
    testUnsigned16Int(a2); // @output 15431
    testUnsigned16Int(a3); // @output 65535
}

function testUnsigned16Int(int:Unsigned16 i) {
    io:println(i);
}

Test-Case: output
Description: Test assignability with type Unsigned16.
Labels: int:Signed32, int:Unsigned16, int:Unsigned32, is-expr

public function main() {
    int:Unsigned16 a1 = 15431;
    int:Unsigned16 a2 = 65535;

    int:Unsigned32 b1 = a1;
    io:println(b1 is int:Unsigned16); // @output true

    int:Signed32 b2 = a2;
    io:println(b2 is int:Unsigned16); // @output true

    int b3 = a1;
    io:println(b3 is int:Unsigned16); // @output true

    int? b4 = a2;
    io:println(b4 is int:Unsigned16); // @output true
}

Test-Case: output
Description: Test assignability with type Unsigned16.
Labels: any, int:Unsigned16, is-expr, optional-type, string

public function main() {
    int:Unsigned16 a1 = 0;
    int:Unsigned16 a2 = 15431;
    int:Unsigned16 a3 = 65535;

    testIntOrNil(a1); // @output 0
    testIntOrNil(a2); // @output 15431
    testIntOrNil(a3); // @output 65535

    testAny(a1); // @output 0
    testAny(a2); // @output 15431
    testAny(a3); // @output 65535
}

function testIntOrNil(int? i) {
    if i is int {
        io:println(i);
    } else {
        io:println("nil");
    }
}

function testAny(any i) {
    io:println(i);
}

Test-Case: output
Description: Test type Unsigned16 value belonging to a type.
Labels: int:Signed32, int:Unsigned16, int:Unsigned32, is-expr

public function main() {
    int:Unsigned16 a1 = 130;

    io:println(130 is int:Unsigned16); // @output true
    io:println(a1 is int:Signed32); // @output true
    io:println(a1 is int:Unsigned32); // @output true
    io:println(a1 is int); // @output true
}

Test-Case: output
Description: Test equality of type Unsigned16 values.
Labels: int:Unsigned16

public function main() {
    int:Unsigned16 a1 = 127;
    int:Unsigned16 a2 = 127;
    int:Unsigned16 a3 = 120;

    io:println(a1 == a2); // @output true
    io:println(a1 == a3); // @output false
    io:println(a1 != a3); // @output true
}

Test-Case: output
Description: Test equality of type Unsigned16 values.
Labels: int:Signed32, int:Unsigned16, int:Unsigned32, int:Unsigned8

public function main() {
    int:Unsigned16 a1 = 127;

    int:Unsigned32 b1 = 127;
    io:println(a1 == b1); // @output true

    int:Unsigned16 b2 = 127;
    io:println(a1 == b2); // @output true

    int:Unsigned8 b3 = 127;
    io:println(a1 == b3); // @output true

    int:Signed32 b4 = 127;
    io:println(a1 == b4); // @output true

    int b5 = 127;
    io:println(a1 == b5); // @output true
}

Test-Case: output
Description: Test equality of type Unsigned16 values.
Fail-Issue: ballerina-lang#32788
Labels: byte, int:Unsigned16

public function main() {
    int:Unsigned16 a1 = 127;
    byte a2 = 127;

    io:println(a1 == a2); // @output true
}

Test-Case: error
Description: Test type Unsigned16 value assignability with incompatible types.
Labels: int:Unsigned8, int:Unsigned16, string, unary-minus

public function main() {
    int:Unsigned16 a1 = -1; // @error int is not a subtype of int:Unsigned16

    int:Unsigned16 a2 = 130;
    testUnsigned8Int(a2); // @error int:Unsigned16 is not a subtype of int:Unsigned8

    int:Unsigned16 a3 = "A"; // @error string is not a subtype of int:Unsigned16

    string b1 = a2; // @error int:Unsigned16 is not a subtype of string
}

function testUnsigned8Int(int:Unsigned8 i) {
}

Test-Case: error
Description: Test assigning an incompatible int value to type Unsigned16.
Fail-Issue: ballerina-lang#32508 // no errors for these
Labels: int:Unsigned16, unary-minus

public function main() {
    int:Unsigned16 a = -21474770945; // @error int is not a subtype of int:Unsigned16
    int:Unsigned16 b = -21474836480; // @error int is not a subtype of int:Unsigned16
}

Test-Case: error
Description: Test assigning too large value to a Unsigned16 type variable.
Fail-Issue: ballerina-lang#32574
Labels: int:Unsigned16

public function main() {
    int:Unsigned16 x = 9223372036854775808; // @error too large value
}

Test-Case: error
Description: Test assigning too small value to a Unsigned16 type variable.
Fail-Issue: ballerina-lang#32574
Labels: int:Unsigned16, unary-minus

public function main() {
    int:Unsigned16 x = -9223372036854775809; // @error too small value
}
