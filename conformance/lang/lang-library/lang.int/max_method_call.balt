Test-Case: error
Description: Test assigning the result of `max` function to an incompatible type.
Labels: int:max, DecimalNumber, function-call-expr, int:Signed8, method-call-expr, string

function errorFunction(int a) {
    int:Signed8 _ = a.max(10); // @error expects a int:Signed8 value, but max() returns an int

    string _ = a.max(); // @error expects a string value, but max() returns an int

    string _ = int:max(-10); // @error expects a string value, but max() returns an int
}

Test-Case: error
Description: Test passing invalid value to `max` function.
Labels: int:max, float, function-call-expr, method-call-expr, string

function errorFunction(int a) {
    int _ = a.max(10.5); // @error expects other values to be int

    int _ = int:max("ABC"); // @error expects first value to be int
}

Test-Case: error
Description: Test `max` function on invalid type.
Labels: int:max, DecimalNumber, method-call-expr, int, string

function errorFunction(string a) {
    int _ = a.max(10); // @error max() is not defined for string
}

Test-Case: error
Description: Test missing required parameter in `max` function call.
Labels: int:max, function-call-expr, int

function errorFunction() {
    int _ = int:max(); // @error missing first int value
}
