Test-Case: error
Description: Test additive expression with static types of operands belonging to different basic types
             resulting in an error.
Labels: additive-expr, decimal, float, int

function errorFunction(int a, float b, decimal c) {
    int _ = a + b; // @error + is not allowed with operands of different basic types
    int _ = a - b; // @error - is not allowed with operands of different basic types
    int _ = a + c; // @error + is not allowed with operands of different basic types
    int _ = a - c; // @error - is not allowed with operands of different basic types

    float _ = b + a; // @error + is not allowed with operands of different basic types
    float _ = b - a; // @error - is not allowed with operands of different basic types
    float _ = b + c; // @error + is not allowed with operands of different basic types
    float _ = b - c; // @error - is not allowed with operands of different basic types
}

Test-Case: error
Description: Test additive expression with static types of operands belonging to different basic types
             resulting in an error.
Fail-Issue: ballerina-platform/ballerina-lang#32940
Labels: additive-expr, decimal, float, int

function errorFunction(int a, float b, decimal c) {
    decimal _ = c + a; // @error + is not allowed with operands of different basic types
    decimal _ = c - a; // @error - is not allowed with operands of different basic types
    decimal _ = c + b; // @error + is not allowed with operands of different basic types
    decimal _ = c - b; // @error - is not allowed with operands of different basic types
}

Test-Case: error
Description: Test additive expression with static types of operands belonging to different optional
             basic types resulting in an error.
Labels: additive-expr, decimal, float, int, numeric-nil-lifting, optional-type

function errorFunction(int? a, float? b, decimal? c) {
    int? _ = a + b; // @error + is not allowed with operands of different basic types
    int? _ = a - b; // @error - is not allowed with operands of different basic types
    int? _ = a + c; // @error + is not allowed with operands of different basic types
    int? _ = a - c; // @error - is not allowed with operands of different basic types

    float? _ = b + a; // @error + is not allowed with operands of different basic types
    float? _ = b - a; // @error - is not allowed with operands of different basic types
    float? _ = b + c; // @error + is not allowed with operands of different basic types
    float? _ = b - c; // @error - is not allowed with operands of different basic types

    decimal? _ = c + a; // @error + is not allowed with operands of different basic types
    decimal? _ = c - a; // @error - is not allowed with operands of different basic types
    decimal? _ = c + b; // @error + is not allowed with operands of different basic types
    decimal? _ = c - b; // @error - is not allowed with operands of different basic types
}

Test-Case: error
Description: Test additive expression with static types of operands belonging to different optional and
             non-optional basic types resulting in an error.
Labels: additive-expr, decimal, float, int, numeric-nil-lifting, optional-type

function errorFunction(int a, float b, int? c, float? d, decimal? e) {
    int _ = a + d; // @error + is not allowed with operands of different basic types
    int _ = a - d; // @error - is not allowed with operands of different basic types
    int _ = a + e; // @error + is not allowed with operands of different basic types
    int _ = a - e; // @error - is not allowed with operands of different basic types

    float _ = b + c; // @error + is not allowed with operands of different basic types
    float _ = b - c; // @error - is not allowed with operands of different basic types
    float _ = b + e; // @error + is not allowed with operands of different basic types
    float _ = b - e; // @error - is not allowed with operands of different basic types
}

Test-Case: error
Description: Test additive expression with static types of operands belonging to different optional and
             non-optional basic types resulting in an error.
Fail-Issue: ballerina-platform/ballerina-lang#32940
Labels: additive-expr, decimal, float, int, numeric-nil-lifting, optional-type

function errorFunction(decimal a, int? b, float? c) {
    decimal _ = a + b; // @error + is not allowed with operands of different basic types
    decimal _ = a - b; // @error - is not allowed with operands of different basic types
    decimal _ = a + c; // @error + is not allowed with operands of different basic types
    decimal _ = a - c; // @error - is not allowed with operands of different basic types
}

Test-Case: error
Description: Test additive expression with static types of operands belonging to numeric and non-numeric basic types
             resulting in an error.
Labels: additive-expr, decimal, float, int, optional-type, numeric-nil-lifting, string

function errorFunction(int a, float b, int? c, float? d, decimal? e, string f, string? g) {
    int _ = a + f; // @error + is not allowed with operands of different basic types
    int _ = a - f; // @error - is not allowed with operands of different basic types
    int _ = a + g; // @error + is not allowed with operands of different basic types
    int _ = a - g; // @error - is not allowed with operands of different basic types

    float _ = b + f; // @error + is not allowed with operands of different basic types
    float _ = b - f; // @error - is not allowed with operands of different basic types
    float _ = b + g; // @error + is not allowed with operands of different basic types
    float _ = b - g; // @error - is not allowed with operands of different basic types

    int? _ = c + f; // @error + is not allowed with operands of different basic types
    int? _ = c - f; // @error - is not allowed with operands of different basic types
    int? _ = c + g; // @error + is not allowed with operands of different basic types
    int? _ = c - g; // @error - is not allowed with operands of different basic types

    float? _ = d + f; // @error + is not allowed with operands of different basic types
    float? _ = d - f; // @error - is not allowed with operands of different basic types
    float? _ = d + g; // @error + is not allowed with operands of different basic types
    float? _ = d - g; // @error - is not allowed with operands of different basic types

    decimal? _ = e + f; // @error + is not allowed with operands of different basic types
    decimal? _ = e - f; // @error - is not allowed with operands of different basic types
    decimal? _ = e + g; // @error + is not allowed with operands of different basic types
    decimal? _ = e - g; // @error - is not allowed with operands of different basic types
}

Test-Case: error
Description: Test additive expression with static types of operands belonging to numeric and non-numeric basic types
             resulting in an error.
Fail-Issue: ballerina-platform/ballerina-lang#32940
Labels: additive-expr, decimal, optional-type, string

function errorFunction(decimal a, string b, string? c) {
    decimal _ = a + b; // @error + is not allowed with operands of different basic types
    decimal _ = a - b; // @error - is not allowed with operands of different basic types
    decimal _ = a + c; // @error + is not allowed with operands of different basic types
    decimal _ = a - c; // @error - is not allowed with operands of different basic types
}

Test-Case: error
Description: Test additive expression with static types of operands belonging to different basic types
             resulting in an error when the static type of at least one operand is a subtype of a numeric type.
Labels: additive-expr, byte, decimal, float, floating-point-literal, int, int-literal, int:Signed8,
        int:Signed16, int:Signed32, int:Unsigned8, int:Unsigned16, int:Unsigned32, module-type-defn,
        numeric-literal, numeric-nil-lifting, optional-type, singleton-type, union-type

type Ints 1|2;
type Floats 2.0|3.0|4.0;
type Decimals 1d|4.12d;

function errorFunction(int:Signed8 a, int:Signed16 b, int:Signed32 c, int:Unsigned8 d, int:Unsigned16 e,
                     int:Unsigned32 f, byte g, Ints h, Floats i, Decimals j, int:Unsigned8? k,
                     Ints? l, Floats? m, Decimals? n) {
    int:Signed8 _ = a + i; // @error + is not allowed with operands of different basic types
    int _ = a - j; // @error - is not allowed with operands of different basic types
    int _ = a + m; // @error + is not allowed with operands of different basic types
    int _ = a - n; // @error - is not allowed with operands of different basic types

    int:Signed16 v = b + i; // @error + is not allowed with operands of different basic types
    int _ = b - j; // @error - is not allowed with operands of different basic types
    int _ = b + m; // @error + is not allowed with operands of different basic types
    int _ = b - n; // @error - is not allowed with operands of different basic types

    int:Signed32 _ = c + i; // @error + is not allowed with operands of different basic types
    int _ = c - j; // @error - is not allowed with operands of different basic types
    int _ = c + m; // @error + is not allowed with operands of different basic types
    int _ = c - n; // @error - is not allowed with operands of different basic types

    int:Unsigned8 _ = d + i; // @error + is not allowed with operands of different basic types
    int _ = d - j; // @error - is not allowed with operands of different basic types
    int _ = d + m; // @error + is not allowed with operands of different basic types
    int _ = d - n; // @error - is not allowed with operands of different basic types

    int:Unsigned16 _ = e + i; // @error + is not allowed with operands of different basic types
    int _ = e - j; // @error - is not allowed with operands of different basic types
    int _ = e + m; // @error + is not allowed with operands of different basic types
    int _ = e - n; // @error - is not allowed with operands of different basic types

    int:Unsigned32 _ = f + i; // @error + is not allowed with operands of different basic types
    int _ = f - j; // @error - is not allowed with operands of different basic types
    int _ = f + m; // @error + is not allowed with operands of different basic types
    int _ = f - n; // @error - is not allowed with operands of different basic types

    byte _ = g + i; // @error + is not allowed with operands of different basic types
    int _ = g - j; // @error - is not allowed with operands of different basic types
    int _ = g + m; // @error + is not allowed with operands of different basic types
    int _ = g - n; // @error - is not allowed with operands of different basic types

    Ints _ = h + i; // @error + is not allowed with operands of different basic types
    int _ = h - j; // @error - is not allowed with operands of different basic types
    int _ = h + m; // @error + is not allowed with operands of different basic types
    int _ = h - n; // @error - is not allowed with operands of different basic types

    Floats _ = i + j; // @error + is not allowed with operands of different basic types
    float _ = i - k; // @error - is not allowed with operands of different basic types
    float _ = i + l; // @error + is not allowed with operands of different basic types
    float _ = i - n; // @error - is not allowed with operands of different basic types

    Decimals a37 = j + k; // @error + is not allowed with operands of different basic types
    decimal? a38 = j - l; // @error - is not allowed with operands of different basic types
    decimal? a39 = j + m; // @error + is not allowed with operands of different basic types
    decimal? a40 = j - k; // @error - is not allowed with operands of different basic types
}

Test-Case: parser-error
Description: Test syntax errors in additive expression
Labels: additive-expr, int, DecimalNumber

function errorFunction() {
    int _ = 12 + ; // @error missing RHS operand
}
